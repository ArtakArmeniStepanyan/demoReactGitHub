{"version":3,"file":"static/js/528.833ee703.chunk.js","mappings":"sLACA,G,QAA0B,0BAA1B,EAAkE,8BAAlE,EAAyG,wBAAzG,EAA0I,wBAA1I,EAA6K,0BAA7K,EAAiN,yB,mBCUjN,EAPmB,SAACA,GAChB,OACI,gBAAKC,UAAWC,EAAW,IAAMA,EAAjC,UACI,SAAC,KAAD,CAASC,GAAI,YAAcH,EAAMI,GAAjC,SAAqDJ,EAAMK,MAAjBL,EAAMI,KAG3D,ECED,EARgB,SAACJ,GACb,OACI,gBAAKC,UAAWC,EAAhB,SACKF,EAAMM,SADqBN,EAAMI,GAI7C,E,UCTD,EAA4B,kC,uCCyB5B,GAF4BG,EAAAA,EAAAA,GAAU,CAACC,KAAM,wBAAjBD,EAlBL,SAACP,GAEpB,IAAMS,GAAYC,EAAAA,EAAAA,GAAiB,IAEnC,OACI,kBAAMT,UAAWC,EAAaS,SAAUX,EAAMY,aAA9C,WACI,0BACI,SAACC,EAAA,EAAD,CAAOC,UAAWC,EAAAA,EACXC,SAAU,CAACC,EAAAA,EAAUR,GACrBJ,KAAM,iBAAkBa,YAAa,0BAEhD,0BACI,yCAIf,ICSD,EAxBgB,SAAClB,GAEb,IAAImB,EAAiBnB,EAAMoB,YAAYC,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAD,CAAYjB,KAAMiB,EAAEjB,KAAiBD,GAAIkB,EAAElB,IAAZkB,EAAElB,GAArC,IACxCmB,EAAkBvB,EAAMwB,aAAaH,KAAI,SAAAI,GAAC,OAAI,SAAC,EAAD,CAASnB,QAASmB,EAAEnB,QAAoBF,GAAIqB,EAAErB,IAAZqB,EAAErB,GAAxC,IAE9C,IAAKJ,EAAM0B,OAAQ,OAAO,SAAC,KAAD,CAAUC,SAAO,EAACxB,GAAG,WAM/C,OACI,iBAAKF,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SACKiB,KAEL,iBAAKlB,UAAWC,EAAhB,UACKqB,GACD,SAAC,EAAD,CAAqBZ,SAXX,SAACiB,GACnB5B,EAAM6B,WAAWD,EAAOE,eAC3B,SAaJ,ECPD,GAAeC,E,QAAAA,KACXC,EAAAA,EAAAA,KAjBoB,SAACC,GACrB,MAAM,CACFC,eAAgBD,EAAME,YAAYD,eAClCd,YAAaa,EAAME,YAAYf,YAC/BI,aAAcS,EAAME,YAAYX,aAEvC,IAC0B,SAACY,GACxB,MAAM,CACFP,WAAY,SAACC,GACTM,GAASC,EAAAA,EAAAA,GAAwBP,GACpC,EAER,IAKGQ,EAAAA,EAFJ,CAGEC,E","sources":["webpack://01-app/./src/Components/Dialogs/Dialogs.module.css?db5c","Components/Dialogs/DialogItem/DialogItem.js","Components/Dialogs/Message/Message.js","webpack://01-app/./src/Components/Dialogs/InputArea/AddMessageForm.module.css?c22b","Components/Dialogs/InputArea/AddMessageForm.js","Components/Dialogs/Dialogs.js","Components/Dialogs/DialogsContainer.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__anuOU\",\"dialogsItems\":\"Dialogs_dialogsItems__wrCBk\",\"active\":\"Dialogs_active__LYuM0\",\"dialog\":\"Dialogs_dialog__ExnRi\",\"messages\":\"Dialogs_messages__Fm4Jp\",\"message\":\"Dialogs_message__0REZT\"};","import React from \"react\";\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    return(\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={'/dialogs/' + props.id} key={props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from './../Dialogs.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n    return(\r\n        <div className={s.message} key={props.id}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","// extracted by mini-css-extract-plugin\nexport default {\"inputArea\":\"AddMessageForm_inputArea__+BrAV\"};","import React from \"react\";\r\nimport  s from './AddMessageForm.module.css';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\n\r\nconst AddMessageForm = (props) => {\r\n\r\n    const maxLength = maxLengthCreator(50);\r\n\r\n    return(\r\n        <form className={s.inputArea} onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       validate={[required, maxLength]}\r\n                       name={'newMessageBody'} placeholder={'enter your message'} />\r\n            </div>\r\n            <div>\r\n                <button>send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\r\n\r\nexport default AddMessageFormRedux;","import React from \"react\";\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport {Navigate} from \"react-router-dom\";\r\nimport AddMessageFormRedux from \"./InputArea/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogElements = props.dialogsData.map(n => <DialogItem name={n.name} key={n.id} id={n.id} />)\r\n    let messageElements = props.messagesData.map(m => <Message message={m.message} key={m.id} id={m.id}/>)\r\n\r\n    if (!props.isAuth) return <Navigate replace to='/login' />\r\n\r\n    const AddNewMessage = (values) => {\r\n        props.addMessage(values.newMessageBody);\r\n    }\r\n\r\n    return(\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messageElements}\r\n                <AddMessageFormRedux onSubmit={AddNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Dialogs;","import {connect} from \"react-redux\";\r\nimport {addMessageActionCreator} from \"../../Redux/dialogs-reducer\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {compose} from \"redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        newMessageText: state.dialogsPage.newMessageText,\r\n        dialogsData: state.dialogsPage.dialogsData,\r\n        messagesData: state.dialogsPage.messagesData,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        addMessage: (newMessageBody) => {\r\n            dispatch(addMessageActionCreator(newMessageBody))\r\n        },\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect,\r\n)(Dialogs);"],"names":["props","className","s","to","id","name","message","reduxForm","form","maxLength","maxLengthCreator","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","dialogElements","dialogsData","map","n","messageElements","messagesData","m","isAuth","replace","values","addMessage","newMessageBody","compose","connect","state","newMessageText","dialogsPage","dispatch","addMessageActionCreator","withAuthRedirect","Dialogs"],"sourceRoot":""}